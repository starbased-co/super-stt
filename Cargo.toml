[workspace]
  members = [
    "super-stt",
    "super-stt-app",
    "super-stt-cosmic-applet",
    "super-stt-shared",
  ]
  resolver = "2"

  [workspace.package]
    version = "0.1.0"
    edition = "2024"
    authors = ["Jorge Menjivar <jorge@menjivar.ai>"]

  [workspace.dependencies]
    # Build dependencies
    vergen = { version = "8.3.1", features = ["git", "gitcl"] }

    # Shared dependencies with common versions
    # Candle ML framework (for daemon)
    candle-core         = { git = "https://github.com/huggingface/candle.git", branch = "main" }
    candle-nn           = { git = "https://github.com/huggingface/candle.git", branch = "main" }
    candle-transformers = { git = "https://github.com/huggingface/candle.git", branch = "main" }
    candle-flash-attn   = { git = "https://github.com/huggingface/candle.git", branch = "main" }

    # Tokenizers (for daemon)
    tokenizers = "0.21.4"
    tekken-rs  = "0.1.1"

    anyhow = "1.0.98"
    serde = { version = "1.0.219", features = ["derive"] }
    serde_json = "1.0.145"
    thiserror = "2.0"
    tokio = { version = "1.47.1", features = [
      "macros",
      "rt-multi-thread",
      "time",
      "net",
      "full",
    ] }
    tokio-util = "0.7"
    log = "0.4.27"
    env_logger = "0.11.8"
    chrono = { version = "0.4", features = ["serde"] }
    uuid = { version = "1.18.0", features = ["v4"] }
    clap = { version = "4.5.43", features = ["derive", "cargo"] }
    clap_complete = "4.5.56"
    reqwest = { version = "0.12.22", features = [
      "json",
      "multipart",
      "rustls-tls",
      "stream",
    ], default-features = false }
    strum = { version = "0.27.2", features = ["derive"] }
    strum_macros = "0.27"

    # Filesystem utilities
    toml = "0.9.5"
    dirs = "6.0.0"

    # Audio processing
    hound             = "3.5.1"
    cpal              = "0.16.0"
    rubato            = "0.16"
    spectrum-analyzer = "1.7.0"
    symphonia         = { version = "0.5", features = ["all"] }
    rustfft           = "6.4.0"

    # Input simulation (for client)
    enigo = { version = "0.5.0", default-features = false, features = [
      "wayland",
    ] }

    # Cosmic specific
    libcosmic = { git = "https://github.com/pop-os/libcosmic.git", features = [
      "a11y",
      "applet",
      "dbus-config",
      "multi-window",
      "single-instance",
      "tokio",
      "winit",
      "wayland",
      "wgpu",
    ] }
    i18n-embed = { version = "0.16.0", features = [
      "fluent-system",
      "desktop-requester",
    ] }
    i18n-embed-fl = "0.10.0"
    futures-util = "0.3.31"
    open = "5.3.2"
    rust-embed = "8.7.2"
    sysinfo = "0.37.0"

    # Daemon specific
    byteorder   = "1.5"
    dashmap     = "6.1.0"
    parking_lot = "0.12"

    # System calls (for client singleton)
    libc = "0.2"

    # D-Bus integration
    zbus = "5.9.0"

  [workspace.metadata.cross.build]
    pre-build = [
      "dpkg --add-architecture $CROSS_DEB_ARCH",
      "apt-get update && apt-get --assume-yes install git libxkbcommon-dev:$CROSS_DEB_ARCH libwayland-dev:$CROSS_DEB_ARCH libxkbcommon-x11-dev:$CROSS_DEB_ARCH libegl1-mesa-dev:$CROSS_DEB_ARCH libfontconfig1-dev:$CROSS_DEB_ARCH libfreetype6-dev:$CROSS_DEB_ARCH libglib2.0-dev:$CROSS_DEB_ARCH libspeechd-dev:$CROSS_DEB_ARCH libxrandr-dev:$CROSS_DEB_ARCH libxinerama-dev:$CROSS_DEB_ARCH libxcursor-dev:$CROSS_DEB_ARCH libxi-dev:$CROSS_DEB_ARCH libxss-dev:$CROSS_DEB_ARCH libasound2-dev:$CROSS_DEB_ARCH pkg-config libssl-dev:$CROSS_DEB_ARCH",
    ]


    [workspace.metadata.cross.build.env]
      passthrough = ["CUDA_COMPUTE_CAP"]

  [workspace.metadata.cross.target.x86_64-unknown-linux-gnu]
    image = "nvidia/cuda:12.8.0-cudnn-devel-ubuntu22.04"

[profile.release]
  lto           = true
  codegen-units = 1
  panic         = "abort"
